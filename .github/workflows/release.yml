# This is a basic workflow to help you get started with Actions

name: Continuous Delivery

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  relevant_environments:
    name: "Calculate relevant Github environments"

    runs-on: ubuntu-latest

    outputs:
      changed: ${{ fromJSON(steps.calc.outputs.changed) }}

    steps:
      - uses: actions/checkout@v2

      - id: changed_files
        uses: jitterbit/get-changed-files@v1

      - id: calc
        shell: bash
        run: |
          # This line takes all changed files, strips them down to their top-level folder, and uniqifies that list
          folders=$(echo ${{ steps.changed_files.outputs.added_modified }} | xargs -n1 echo | cut -d '/' -f 1 | uniq)

          # This converts a space-separated list into a JSON list
          changed=$(echo $folders | jq -R 'split(" ")' -rj | tr -d '\n' | tr -d ' ')

          # Set the output to a JSON formatted string
          echo "::set-output name=changed::$changed"

  debug_relevant_environments:
    name: "Debug relevant environments"
    runs-on: ubuntu-latest
    needs:
      - relevant_environments
    steps:
      - run: echo "${{ needs.relevant_environments.outputs.changed }}"
      - run: echo "${{ needs.relevant_environments.outputs.changed.* }}"

  # This workflow contains a single job called "build"
  build:
    name: "Build"

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build the thing
        run: |
          echo "Building the thing"
          sleep 2
          echo "Done!"

  deploy_testing:
    name: "Deploy to Testing"

    if: "${{ contains(needs.relevant_environments.outputs.changed, 'sandbox') }}"

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    needs:
      - relevant_environments
      - build
    
    environment:
      name: testing

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to testing
        run: |
          echo "Deploy the thing to Staging"
          sleep 2
          echo "Done!"

  deploy_staging:
    name: "Deploy to Staging"

    if: "${{ contains(needs.relevant_environments.outputs.changed, 'staging') }}"

    runs-on: ubuntu-latest
    
    needs:
      - relevant_environments
      - build
    
    environment:
      name: staging

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Staging
        run: |
          echo "Deploy the thing to Staging"
          sleep 2
          echo "Done!"
  
  deploy_production:
    name: "Deploy to Production"

    if: "${{ contains(needs.relevant_environments.outputs.changed, 'production') }}"

    runs-on: ubuntu-latest
    
    needs:
      - relevant_environments
      - build

    environment:
      name: production

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Production
        run: |
          echo "Deploying the thing to Production"
          sleep 2
          echo "Done!"
