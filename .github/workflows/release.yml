# This is a basic workflow to help you get started with Actions

name: Continuous Delivery

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  relevant_environments:
    name: "Calculate relevant Github environments"

    runs-on: ubuntu-latest

    outputs:
      production: ${{ steps.calc.outputs.production }}
      staging: ${{ steps.calc.outputs.staging }}
      sandbox: ${{ steps.calc.outputs.sandbox }}

    steps:
      - uses: actions/checkout@v2

      - id: changed_files
        uses: jitterbit/get-changed-files@v1

      - id: calc
        run: |
          for changed_file in ${{ steps.changed_files.outputs.added_modified }}; do
            if [[ $changed_file == "production/*" ]]; then
              echo "::set-output name=production::true"
            fi
            if [[ $changed_file == "staging/*" ]]; then
              echo "::set-output name=staging::true"
            fi
            if [[ $changed_file == "sandbox/*" ]]; then
              echo "::set-output name=sandbox::true"
            fi
          done

  # This workflow contains a single job called "build"
  build:
    name: "Build"

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Build the thing
        run: |
          echo "Building the thing"
          sleep 2
          echo "Done!"

  deploy_testing:
    name: "Deploy to Testing"

    if: "${{ needs.relevant_environment.outputs.staging }}"

    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    needs:
      - relevant_environments
      - build
    
    environment:
      name: testing

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to testing
        run: |
          echo "Deploy the thing to Staging"
          sleep 2
          echo "Done!"

  deploy_staging:
    name: "Deploy to Staging"

    if: "${{ needs.relevant_environment.outputs.staging }}"

    runs-on: ubuntu-latest
    
    needs:
      - relevant_environments
      - deploy_testing
    
    environment:
      name: staging

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Staging
        run: |
          echo "Deploy the thing to Staging"
          sleep 2
          echo "Done!"
  
  deploy_production:
    name: "Deploy to Production"

    if: "${{ needs.relevant_environment.outputs.production }}"

    runs-on: ubuntu-latest
    
    needs:
      - relevant_environments
      - deploy_staging

    environment:
      name: production

    steps:
      - uses: actions/checkout@v2

      - name: Deploy to Production
        run: |
          echo "Deploying the thing to Production"
          sleep 2
          echo "Done!"
